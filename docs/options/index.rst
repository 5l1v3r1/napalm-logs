=====================
Configuration Options
=====================

Here we will list all options and what they do.

Command Line
++++++++++++

All of the command line arguments can also be added to a config file.

``address``
-----------

This can be assigned using ``-a``

The IP address to use to listen for all incoming syslog messages.

Default: ``0.0.0.0``

``auth-address``
----------------

The IP address to listen on for incoming authorisation requests.

Default: ``0.0.0.0``

``auth-port``
-------------

The port to listen on for incoming authorisation requests.

Default: ``49018``

``certificate``
---------------

The certificate to use for the authorisation process. This will be presented to incoming clients during the TLS handshake.

``config-file``
---------------

This can be assigned using ``-c``

Specifies the file where further configuration options can be found.

Default: ``/etc/napalm/logs``

``config-path``
---------------

The directory path where device configuration files can be found. These are the files that contain the syslog message format for each device.

``disable-security``
--------------------

If set no encryption or message signing will take place. All messages will be in plain text. The client will not be able to verify that a message was generated by the server.

It is not recommended to use this in a production environment.

``extension-config-path``
-------------------------

A path where you can specify further device configuration files that contain the syslog message format for devices.

``keyfile``
-----------

The private key for the certificate specified by the ``certificate`` option. This will be used to generate a key to encrypt messages.

``listener``
------------

The module to use when listening for incoming syslog messages.

Default: udp

``log-file``
------------

The file where to send log messages.

If you want log messages to be outputted to the command line you can specify ``--log-file cli``.

Default: ``/var/log/napalm/logs``

``log-format``
--------------

The format of the log messages.

Default: ``%(asctime)s,%(msecs)03.0f [%(name)-17s][%(levelname)-8s] %(message)s``
An example: ``2017-07-03 11:54:25,300,301 [napalm_logs.listener.tcp][INFO    ] Stopping listener process``

``log-level``
-------------

The level at which to log messages. Possible options are ``CRITIAL``, ``ERROR``, ``WARNING``, ``INFO``, ``DEBUG``.

Default: ``WARNING``

``port``
--------

This can be assigned using ``-p``

The port to use to listen for all incoming syslog messages.

Default: 514

``publish-address``
-------------------

The IP address to use to output the processed message.

Default: 0.0.0.0

``publish-port``
----------------

The port to use to output the processes message

Default: ``49017``

``transport``
-------------

This can be assigned using ``-t``

The module to use to output the processed message information.

Default: zmq

Config File Only Options
++++++++++++++++++++++++

The options to be used inside of the pluggable modules are not provided via the command line, they need to be provided in the config file.

Each of the following should be a ``dictionary`` containing the ``keys`` provided below each one.

``listener_opts``
+++++++++++++++++

``bootstrap_servers``
---------------------

For use with: ``kafka``

``host[:port]`` string (or list of ``host[:port]`` strings) that the consumer should contact to bootstrap initial cluster metadata. This does not have to be the full node list. It just needs to have at least one broker that will respond to a Metadata API Request.

``kafka_topic``
---------------

For use with: ``kafka``

The topic to subscribe to and receive messages for.

``logger_opts``
+++++++++++++++++

``bootstrap_servers``
---------------------

For use with: ``kafka``

``host[:port]`` string (or list of ``host[:port]`` strings) that the consumer should contact to bootstrap initial cluster metadata. This does not have to be the full node list. It just needs to have at least one broker that will respond to a Metadata API Request.

``kafka_topic``
---------------

For use with: ``kafka``

The topic to subscribe to and receive messages for.

``syslog``
----------

If this option is set all processed syslog messages, even ones that have not matches a configured error, will be output via the specified transport.

This can be used to forward to log server for storage.

``publisher_opts``
+++++++++++++++++

``bootstrap_servers``
---------------------

For use with: ``kafka``

``host[:port]`` string (or list of ``host[:port]`` strings) that the consumer should contact to bootstrap initial cluster metadata. This does not have to be the full node list. It just needs to have at least one broker that will respond to a Metadata API Request.

``kafka_topic``
---------------

For use with: ``kafka``

The topic to subscribe to and receive messages for.
